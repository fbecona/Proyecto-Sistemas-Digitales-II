////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Alarma.vf
// /___/   /\     Timestamp : 07/05/2019 01:39:30
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog C:/Users/estudiante.fit/Desktop/ProyectoFinalSistemasConAlarmaBIEN/ProyectoFinalSd2/Alarma.vf -w C:/Users/estudiante.fit/Desktop/ProyectoFinalSistemasConAlarmaBIEN/ProyectoFinalSd2/Alarma.sch
//Design Name: Alarma
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FTRSE_MXILINX_Alarma(C, 
                            CE, 
                            R, 
                            S, 
                            T, 
                            Q);

   parameter INIT = 1'b0;
   
    input C;
    input CE;
    input R;
    input S;
    input T;
   output Q;
   
   wire CE_S;
   wire D_S;
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDRE  I_36_35 (.C(C), 
                 .CE(CE_S), 
                 .D(D_S), 
                 .R(R), 
                 .Q(Q_DUMMY));
   OR2  I_36_73 (.I0(S), 
                .I1(TQ), 
                .O(D_S));
   OR2  I_36_77 (.I0(CE), 
                .I1(S), 
                .O(CE_S));
endmodule
`timescale 1ns / 1ps

module CB4RE_MXILINX_Alarma(C, 
                            CE, 
                            R, 
                            CEO, 
                            Q0, 
                            Q1, 
                            Q2, 
                            Q3, 
                            TC);

    input C;
    input CE;
    input R;
   output CEO;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output TC;
   
   wire T2;
   wire T3;
   wire XLXN_1;
   wire XLXN_2;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire Q3_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign Q3 = Q3_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "I_Q0_5" *) 
   FTRSE_MXILINX_Alarma #( .INIT(1'b0) ) I_Q0 (.C(C), 
                              .CE(CE), 
                              .R(R), 
                              .S(XLXN_2), 
                              .T(XLXN_1), 
                              .Q(Q0_DUMMY));
   (* HU_SET = "I_Q1_6" *) 
   FTRSE_MXILINX_Alarma #( .INIT(1'b0) ) I_Q1 (.C(C), 
                              .CE(CE), 
                              .R(R), 
                              .S(XLXN_2), 
                              .T(Q0_DUMMY), 
                              .Q(Q1_DUMMY));
   (* HU_SET = "I_Q2_7" *) 
   FTRSE_MXILINX_Alarma #( .INIT(1'b0) ) I_Q2 (.C(C), 
                              .CE(CE), 
                              .R(R), 
                              .S(XLXN_2), 
                              .T(T2), 
                              .Q(Q2_DUMMY));
   (* HU_SET = "I_Q3_8" *) 
   FTRSE_MXILINX_Alarma #( .INIT(1'b0) ) I_Q3 (.C(C), 
                              .CE(CE), 
                              .R(R), 
                              .S(XLXN_2), 
                              .T(T3), 
                              .Q(Q3_DUMMY));
   AND4  I_36_31 (.I0(Q3_DUMMY), 
                 .I1(Q2_DUMMY), 
                 .I2(Q1_DUMMY), 
                 .I3(Q0_DUMMY), 
                 .O(TC_DUMMY));
   AND3  I_36_32 (.I0(Q2_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q0_DUMMY), 
                 .O(T3));
   AND2  I_36_33 (.I0(Q1_DUMMY), 
                 .I1(Q0_DUMMY), 
                 .O(T2));
   VCC  I_36_58 (.P(XLXN_1));
   GND  I_36_64 (.G(XLXN_2));
   AND2  I_36_69 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module contador10_MUSER_Alarma(C, 
                               E, 
                               C10, 
                               Q0, 
                               Q1, 
                               Q2, 
                               Q3);

    input C;
    input E;
   output C10;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_20;
   wire XLXN_42;
   wire C10_DUMMY;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire Q3_DUMMY;
   
   assign C10 = C10_DUMMY;
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign Q3 = Q3_DUMMY;
   (* HU_SET = "XLXI_1_9" *) 
   CB4RE_MXILINX_Alarma  XLXI_1 (.C(C), 
                                .CE(E), 
                                .R(C10_DUMMY), 
                                .CEO(), 
                                .Q0(Q0_DUMMY), 
                                .Q1(Q1_DUMMY), 
                                .Q2(Q2_DUMMY), 
                                .Q3(Q3_DUMMY), 
                                .TC());
   AND2  XLXI_2 (.I0(XLXN_20), 
                .I1(Q0_DUMMY), 
                .O(XLXN_3));
   AND2  XLXI_3 (.I0(Q3_DUMMY), 
                .I1(XLXN_42), 
                .O(XLXN_4));
   AND2  XLXI_4 (.I0(XLXN_4), 
                .I1(XLXN_3), 
                .O(C10_DUMMY));
   INV  XLXI_14 (.I(Q1_DUMMY), 
                .O(XLXN_20));
   INV  XLXI_24 (.I(Q2_DUMMY), 
                .O(XLXN_42));
endmodule
`timescale 1ns / 1ps

module contador5_MUSER_Alarma(C, 
                              C5);

    input C;
   output C5;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire C5_DUMMY;
   
   assign C5 = C5_DUMMY;
   (* HU_SET = "XLXI_1_10" *) 
   CB4RE_MXILINX_Alarma  XLXI_1 (.C(C), 
                                .CE(XLXN_22), 
                                .R(C5_DUMMY), 
                                .CEO(), 
                                .Q0(XLXN_23), 
                                .Q1(XLXN_21), 
                                .Q2(XLXN_16), 
                                .Q3(XLXN_18), 
                                .TC());
   AND2  XLXI_2 (.I0(XLXN_20), 
                .I1(XLXN_24), 
                .O(XLXN_3));
   AND2  XLXI_3 (.I0(XLXN_19), 
                .I1(XLXN_16), 
                .O(XLXN_4));
   AND2  XLXI_4 (.I0(XLXN_4), 
                .I1(XLXN_3), 
                .O(C5_DUMMY));
   INV  XLXI_14 (.I(XLXN_21), 
                .O(XLXN_20));
   INV  XLXI_15 (.I(XLXN_18), 
                .O(XLXN_19));
   VCC  XLXI_16 (.P(XLXN_22));
   INV  XLXI_17 (.I(XLXN_23), 
                .O(XLXN_24));
endmodule
`timescale 1ns / 1ps

module segundo_MUSER_Alarma(C, 
                            E, 
                            seg);

    input C;
    input E;
   output seg;
   
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_24;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_31;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   
   contador10_MUSER_Alarma  XLXI_1 (.C(C), 
                                   .E(E), 
                                   .C10(XLXN_31), 
                                   .Q0(), 
                                   .Q1(), 
                                   .Q2(), 
                                   .Q3());
   contador5_MUSER_Alarma  XLXI_7 (.C(XLXN_21), 
                                  .C5(seg));
   contador10_MUSER_Alarma  XLXI_9 (.C(XLXN_31), 
                                   .E(XLXN_49), 
                                   .C10(XLXN_15), 
                                   .Q0(), 
                                   .Q1(), 
                                   .Q2(), 
                                   .Q3());
   contador10_MUSER_Alarma  XLXI_10 (.C(XLXN_15), 
                                    .E(XLXN_52), 
                                    .C10(XLXN_16), 
                                    .Q0(), 
                                    .Q1(), 
                                    .Q2(), 
                                    .Q3());
   contador10_MUSER_Alarma  XLXI_11 (.C(XLXN_16), 
                                    .E(XLXN_27), 
                                    .C10(XLXN_24), 
                                    .Q0(), 
                                    .Q1(), 
                                    .Q2(), 
                                    .Q3());
   contador10_MUSER_Alarma  XLXI_12 (.C(XLXN_24), 
                                    .E(XLXN_50), 
                                    .C10(XLXN_19), 
                                    .Q0(), 
                                    .Q1(), 
                                    .Q2(), 
                                    .Q3());
   contador10_MUSER_Alarma  XLXI_13 (.C(XLXN_19), 
                                    .E(XLXN_51), 
                                    .C10(XLXN_20), 
                                    .Q0(), 
                                    .Q1(), 
                                    .Q2(), 
                                    .Q3());
   contador10_MUSER_Alarma  XLXI_14 (.C(XLXN_20), 
                                    .E(XLXN_26), 
                                    .C10(XLXN_21), 
                                    .Q0(), 
                                    .Q1(), 
                                    .Q2(), 
                                    .Q3());
   VCC  XLXI_15 (.P(XLXN_26));
   VCC  XLXI_16 (.P(XLXN_27));
   VCC  XLXI_21 (.P(XLXN_49));
   VCC  XLXI_22 (.P(XLXN_50));
   VCC  XLXI_23 (.P(XLXN_51));
   VCC  XLXI_24 (.P(XLXN_52));
endmodule
`timescale 1ns / 1ps

module FTCE_MXILINX_Alarma(C, 
                           CE, 
                           CLR, 
                           T, 
                           Q);

   parameter INIT = 1'b0;
   
    input C;
    input CE;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDCE  I_36_35 (.C(C), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(TQ), 
                 .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module COMP16_MXILINX_Alarma(A, 
                             B, 
                             EQ);

    input [15:0] A;
    input [15:0] B;
   output EQ;
   
   wire ABCF;
   wire AB0;
   wire AB1;
   wire AB2;
   wire AB3;
   wire AB4;
   wire AB5;
   wire AB6;
   wire AB7;
   wire AB8;
   wire AB8B;
   wire AB9;
   wire AB03;
   wire AB10;
   wire AB11;
   wire AB12;
   wire AB13;
   wire AB14;
   wire AB15;
   wire AB47;
   
   AND4  I_36_31 (.I0(ABCF), 
                 .I1(AB8B), 
                 .I2(AB47), 
                 .I3(AB03), 
                 .O(EQ));
   XNOR2  I_36_40 (.I0(B[1]), 
                  .I1(A[1]), 
                  .O(AB1));
   XNOR2  I_36_41 (.I0(B[0]), 
                  .I1(A[0]), 
                  .O(AB0));
   XNOR2  I_36_54 (.I0(B[2]), 
                  .I1(A[2]), 
                  .O(AB2));
   XNOR2  I_36_55 (.I0(B[3]), 
                  .I1(A[3]), 
                  .O(AB3));
   XNOR2  I_36_56 (.I0(B[4]), 
                  .I1(A[4]), 
                  .O(AB4));
   XNOR2  I_36_57 (.I0(B[5]), 
                  .I1(A[5]), 
                  .O(AB5));
   XNOR2  I_36_58 (.I0(B[6]), 
                  .I1(A[6]), 
                  .O(AB6));
   XNOR2  I_36_59 (.I0(B[7]), 
                  .I1(A[7]), 
                  .O(AB7));
   XNOR2  I_36_60 (.I0(B[8]), 
                  .I1(A[8]), 
                  .O(AB8));
   XNOR2  I_36_61 (.I0(B[9]), 
                  .I1(A[9]), 
                  .O(AB9));
   XNOR2  I_36_62 (.I0(B[10]), 
                  .I1(A[10]), 
                  .O(AB10));
   XNOR2  I_36_63 (.I0(B[11]), 
                  .I1(A[11]), 
                  .O(AB11));
   XNOR2  I_36_64 (.I0(B[12]), 
                  .I1(A[12]), 
                  .O(AB12));
   XNOR2  I_36_65 (.I0(B[13]), 
                  .I1(A[13]), 
                  .O(AB13));
   XNOR2  I_36_66 (.I0(B[14]), 
                  .I1(A[14]), 
                  .O(AB14));
   XNOR2  I_36_67 (.I0(B[15]), 
                  .I1(A[15]), 
                  .O(AB15));
   AND4  I_36_68 (.I0(AB7), 
                 .I1(AB6), 
                 .I2(AB5), 
                 .I3(AB4), 
                 .O(AB47));
   AND4  I_36_69 (.I0(AB11), 
                 .I1(AB10), 
                 .I2(AB9), 
                 .I3(AB8), 
                 .O(AB8B));
   AND4  I_36_70 (.I0(AB15), 
                 .I1(AB14), 
                 .I2(AB13), 
                 .I3(AB12), 
                 .O(ABCF));
   AND4  I_36_71 (.I0(AB3), 
                 .I1(AB2), 
                 .I2(AB1), 
                 .I3(AB0), 
                 .O(AB03));
endmodule
`timescale 1ns / 1ps

module FD16CE_MXILINX_Alarma(C, 
                             CE, 
                             CLR, 
                             D, 
                             Q);

    input C;
    input CE;
    input CLR;
    input [15:0] D;
   output [15:0] Q;
   
   
   FDCE #( .INIT(1'b0) ) I_Q0 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[0]), 
              .Q(Q[0]));
   FDCE #( .INIT(1'b0) ) I_Q1 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[1]), 
              .Q(Q[1]));
   FDCE #( .INIT(1'b0) ) I_Q2 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[2]), 
              .Q(Q[2]));
   FDCE #( .INIT(1'b0) ) I_Q3 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[3]), 
              .Q(Q[3]));
   FDCE #( .INIT(1'b0) ) I_Q4 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[4]), 
              .Q(Q[4]));
   FDCE #( .INIT(1'b0) ) I_Q5 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[5]), 
              .Q(Q[5]));
   FDCE #( .INIT(1'b0) ) I_Q6 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[6]), 
              .Q(Q[6]));
   FDCE #( .INIT(1'b0) ) I_Q7 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[7]), 
              .Q(Q[7]));
   FDCE #( .INIT(1'b0) ) I_Q8 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[8]), 
              .Q(Q[8]));
   FDCE #( .INIT(1'b0) ) I_Q9 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[9]), 
              .Q(Q[9]));
   FDCE #( .INIT(1'b0) ) I_Q10 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[10]), 
               .Q(Q[10]));
   FDCE #( .INIT(1'b0) ) I_Q11 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[11]), 
               .Q(Q[11]));
   FDCE #( .INIT(1'b0) ) I_Q12 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[12]), 
               .Q(Q[12]));
   FDCE #( .INIT(1'b0) ) I_Q13 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[13]), 
               .Q(Q[13]));
   FDCE #( .INIT(1'b0) ) I_Q14 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[14]), 
               .Q(Q[14]));
   FDCE #( .INIT(1'b0) ) I_Q15 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[15]), 
               .Q(Q[15]));
endmodule
`timescale 1ns / 1ps

module Alarma(C, 
              CE, 
              E, 
              ESET, 
              Hora, 
              A);

    input C;
    input CE;
    input E;
    input ESET;
    input [15:0] Hora;
   output A;
   
   wire L;
   wire [15:0] XLXN_2;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_17;
   wire XLXN_19;
   
   (* HU_SET = "XLXI_1_11" *) 
   FD16CE_MXILINX_Alarma  XLXI_1 (.C(C), 
                                 .CE(CE), 
                                 .CLR(), 
                                 .D(Hora[15:0]), 
                                 .Q(XLXN_2[15:0]));
   (* HU_SET = "XLXI_2_12" *) 
   COMP16_MXILINX_Alarma  XLXI_2 (.A(XLXN_2[15:0]), 
                                 .B(Hora[15:0]), 
                                 .EQ(L));
   (* HU_SET = "XLXI_5_13" *) 
   FTCE_MXILINX_Alarma #( .INIT(1'b0) ) XLXI_5 (.C(C), 
                               .CE(XLXN_19), 
                               .CLR(), 
                               .T(XLXN_10), 
                               .Q(XLXN_17));
   segundo_MUSER_Alarma  XLXI_6 (.C(C), 
                                .E(XLXN_8), 
                                .seg(XLXN_10));
   VCC  XLXI_7 (.P(XLXN_8));
   AND4  XLXI_8 (.I0(XLXN_17), 
                .I1(ESET), 
                .I2(E), 
                .I3(L), 
                .O(A));
   VCC  XLXI_9 (.P(XLXN_19));
endmodule
